# MD Simulation of Confined Electrolyte #
# The LAMMPS input script enables simulations of ions confined between nanoparticles (NPs) or other material surfaces;
# The script contains "read data" command which defines the model to be simulated; The model is generated by C++ code in Github (https://softmaterialslab.github.io/nanoconfinement-md/);
# The surfaces at z = âˆ’l/2 to z = l/2 are treated as unpolarized planar walls. The ion interact with walls directly;
# Length of confinement is of the order of nanometers;
# Coulombic interactions are calculated by 3D Ewald method; (charged sheets method is applied in nanoconfinement-md code);
# Users can extract the ionic structure (density profile) for a wide variety of ionic and environmental parameters;
# Input Pararmeters in Simulation #
# Note that for style lj, all quantities are in reduced LJ units;
# All ions have identical sizes;
# Mass of positive ion = Mass of chlorine ion;
# Unit of length = Diameter of positive ion =  Diameter of negative ion;
# Positive charge = 1 e; Negative charge = -1 e;
# lx = ly and periodic boundary; lz is nonperiodic boundary;
# epsilon_water = 80;
# room_temperature = 298 in Kelvin;
# cutoff for LJ interactions = 2 ^ (1/6) = 1.122462048 (in reduced lj unit);

# ------------------------------ USER DEFINED PARAMETERS -----------------------------------
variable deltaT equal USERINPUT_TIMESTEP
variable thermoDumpFrq equal USERINPUT_THERMO_DUMP_FRQ
variable stepsBeforeEq equal USERINPUT_STEPS_BEFORE_EQ
variable stepsAfterEq equal USERINPUT_STEPS_AFTER_EQ
variable movieFrq equal USERINPUT_MOVIE_FRQ
variable totalSteps equal ${stepsBeforeEq}+${stepsAfterEq}
variable densityDataFrq equal USERINPUT_FRQ
variable densityDataSamples equal ${stepsAfterEq}/${densityDataFrq}
variable binWidth equal 0.05 #0.05023206751
variable densityWriteFrq equal ${totalSteps}*0.1
variable densityDataSamplesErrorbars equal ${densityWriteFrq}/${densityDataFrq}

# ------------------------------ INITIALIZATION-----------------------------------
units           lj                                      # The units of all quantities specified in simulation are in lj;
dimension       3                                       # It runs 3d simulations;
boundary        p       p       f                       # The simulation box is periodic (p) in  x and y directions and nonperiodic (f) in z direction;
atom_style      charge                                  # Charges are associated with the atoms;

# ------------------------------ SETS PARAMETERS ----------------------------------
neighbor        0.1     bin                             # Extra distance beyond force cutoff (in reduced lj units);
neigh_modify    every   1    delay   0   check   yes   page 50000 one 5000  # The every, delay, check options affect how often lists are built as a simulation runs. "delay" means never build new lists until at least N steps after the previous build. "every" means build lists every M steps. check = yes, then every and delay settings determine when a build may possibly be performed;Neighbor page size must be >= 10x 

# ------------------------ CREAT SIMULATION BOX, ATOMS ----------------------------
read_data       outfiles/ip.lammps.xyz                  # The atoms are listed in order of atom-ID atom-type q x y z;

# ------------------------------ ATOM DEFINITION ----------------------------------
mass            1 1.0                                   # Mass of sodium (in reduced lj units);
mass            2 1.0                                   # Mass of chlorine is considered equal with Mass of sodium (in reduced lj units);
group           positive_ions type 1
group           negative_ions type 2
group           salt_ions union positive_ions negative_ions
dielectric	USERINPUT_DIELECTRIC_CONST                  # Dielectric constant of water. The constant is unitless;
# ------------------------------ ## INITIAL VELOCITIES ## ----------------------------------
velocity	positive_ions	create	1.0	87238748            # Generates an ensemble of velocities using a random number generator with the specified seed at the specified temperature. 1-kB*T,random seed;
velocity        negative_ions   create  1.0     87238748
# ------------------------------- FORCE FIELDS ------------------------------------
pair_style      lj/long/coul/long   cut  long     1.122462048  8.0  # Standard 12/6 Lennard-Jones and Coulombic potentials.Cutoff for L-J = sigma * 2^(1/6),for Coul = 8.0 (reduced lj units);
pair_coeff      1       1       1.0    USERINPUT_POSITIVE_DIAMETER   POSITIVE_CUTOFF # Epsilon, sigma, Cutoff distance (in reduced lj units);
pair_coeff      2       2       1.0    USERINPUT_NEGATIVE_DIAMETER   NEGATIVE_CUTOFF # Defaults:
pair_coeff      1       2       1.0    AVERAGE_DIAMETER  CUTOFF_AVERAGE # Defaults:

fix wallhi      positive_ions  wall/lj126 zhi EDGE 1.0 POSITIVE_RADIUS HALF_POS_CUTOFF # Here, sigma is the distance between center of particle and the nearest point of its surface to the wall (radius of ion);
fix_modify      wallhi energy yes
fix walllo      positive_ions  wall/lj126 zlo EDGE 1.0 POSITIVE_RADIUS  HALF_POS_CUTOFF #  Non-electrostatic interaction between ions and wall at  lz/2;
fix_modify      walllo energy yes
fix wallhii     negative_ions wall/lj126 zhi EDGE 1.0  NEGATIVE_RADIUS  HALF_NEG_CUTOFF #  Non-electrostatic interaction between ions and wall at -lz/2;
fix_modify      wallhii energy yes
fix wallloo     negative_ions wall/lj126 zlo EDGE 1.0  NEGATIVE_RADIUS  HALF_NEG_CUTOFF #  Non-electrostatic interaction between ions and wall at  lz/2;
fix_modify      wallloo energy yes

pair_modify     shift   yes                                              # The additive e_LJ for repulsion-only
kspace_style    pppm/disp 0.0001                                     # To use each timestep to compute Coulombic interactions; accuracy value is desired relative error in forces;
kspace_modify   slab      3.0                                        # The slab allows an Ewald to be used for a systems that are periodic in x,y but non-periodic in z;
# --------------------------------- SETTINGS --------------------------------------

# EQUILIBRATION
thermo_style	  custom    step   temp    vol    density   etotal  ke    pe   epair evdwl ecoul  elong    # Set the style and content for printing thermodynamic data to the screen and log file;
fix               equilibrate salt_ions nvt temp 1.0 1.0 0.1                      # This updates the position and velocity for atoms in the group each timestep in the canonical (nvt) ensemble. # T_start, T_stop, T_damp=100*timestep: The desired temperature at each timestep is a ramped value during the run from Tstart to Tstop. The Tdamp parameter is specified in time units and determines how rapidly the temperature is relaxed;
timestep        ${deltaT}                                                # The timestep command specifies this dimensionless multiplier as the magnitude of the timestep relative to (tau);
thermo	        ${thermoDumpFrq}                                          # How often does the data get dumped
run             ${stepsBeforeEq}                                         # Run time for equilibration;
write_restart   outfiles/equilibrated.electrolyte.system.*                        # Restart command to create a sample of fluid with which you can write a fix
unfix           equilibrate                                                       # Similar to a bracket close
dump	          mymovie  salt_ions    custom	${movieFrq} outfiles/electrolyte_movie.xyz id  type  q  x   y   z

## Image Dump ##
#dump	myimages all image 10000 outfiles/image.*.jpg type type size 1024 1024 axes no 0.8 0.02 view 60 -30
#dump_modify myimages pad 3
#dump_modify myimages boxcolor black backcolor white

# --------------------------------- Desnity profile dump --------------------------------------

#compute ID group-ID chunk/atom dim origin delta #units reduced
compute pdpbin positive_ions chunk/atom bin/1d z center ${binWidth}
compute pdpbinErrorbars positive_ions chunk/atom bin/1d z center ${binWidth}
compute ndpbin negative_ions chunk/atom bin/1d z center ${binWidth}
compute ndpbinErrorbars negative_ions chunk/atom bin/1d z center ${binWidth}

#For example, if Nevery=2, Nrepeat=6, and Nfreq=100, then values on timesteps 90,92,94,96,98,100 will be used to compute the final average on timestep 100. 
fix positivedensity positive_ions ave/chunk ${densityDataFrq} ${densityDataSamples} ${totalSteps} pdpbin density/number ave one file data/p_density_profile.lmp.dat
fix negativedensity negative_ions ave/chunk ${densityDataFrq} ${densityDataSamples} ${totalSteps} ndpbin density/number ave one file data/n_density_profile.lmp.dat

#This is to generate the errorbars
fix positivedensityerrorbars positive_ions ave/chunk ${densityDataFrq} ${densityDataSamplesErrorbars} ${densityWriteFrq} pdpbinErrorbars density/number ave one file data/p_density_profile.lmp.for.errorbars.dat
fix negativedensityerrorbars negative_ions ave/chunk ${densityDataFrq} ${densityDataSamplesErrorbars} ${densityWriteFrq} ndpbinErrorbars density/number ave one file data/n_density_profile.lmp.for.errorbars.dat

# GET DATA
fix             heat salt_ions nvt temp 1.0 1.0 0.1
timestep        ${deltaT}                                          # The timestep command specifies this dimensionless multiplier as the magnitude of the timestep relative to (tau).
thermo          ${thermoDumpFrq}                                   # How often does the data get dumped
run             ${stepsAfterEq}                                    # Run time after equilibration;
write_restart   outfiles/large.sample.electrolyte.*                # Restart command to create a sample of fluid with which you can write a fix
unfix           heat                                               # Similar to a bracket close
unfix           positivedensity
unfix           negativedensity
unfix           positivedensityerrorbars
unfix           negativedensityerrorbars
uncompute     	pdpbin
uncompute     	ndpbin
uncompute     	pdpbinErrorbars
uncompute     	ndpbinErrorbars

##################################################################################
# SIMULATION DONE
undump mymovie
#undump myimages
#shell          mv log.lammps outfiles/log.lammps
#shell          sh infiles/cleanlog.sh # It creates outfiles/thermo.dat. thermo.dat file contains all numeric values in log.lammps without the printed information about the run. This makes it easy to plot.

print "LAMMPS Simulation Ended"
